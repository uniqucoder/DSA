    pair<bool,int> sumTreeFast(Node* root)
    {
        if(root == NULL)
        {
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        if(root ->left == NULL && root ->right == NULL)
        {
            pair<bool,int> p = make_pair(true,root ->data);
            return p;
        }
        
        pair<bool,int> leftAns = sumTreeFast(root ->left);
        pair<bool,int> rightAns = sumTreeFast(root ->right);
        
        
        bool left = leftAns.first;
        bool right = rightAns.first;
        
        bool condn = root -> data == leftAns.second + rightAns.second;
        
        if(left && right && condn)
        {
            return make_pair(true, root ->data + leftAns.second + rightAns.second);
        }
        else
        {
            return make_pair(false, root ->data + leftAns.second + rightAns.second);
        }
        
        
    }
    bool isSumTree(Node* root)
    {
         // Your code here
         return sumTreeFast(root).first;
    }
